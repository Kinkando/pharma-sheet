//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type ApprovalStatus string

const (
	ApprovalStatus_Approved ApprovalStatus = "APPROVED"
	ApprovalStatus_Pending  ApprovalStatus = "PENDING"
)

var ApprovalStatusAllValues = []ApprovalStatus{
	ApprovalStatus_Approved,
	ApprovalStatus_Pending,
}

func (e *ApprovalStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "APPROVED":
		*e = ApprovalStatus_Approved
	case "PENDING":
		*e = ApprovalStatus_Pending
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for ApprovalStatus enum")
	}

	return nil
}

func (e ApprovalStatus) String() string {
	return string(e)
}
